* Emacs configuration
Global settings are in the init.el file, specific modes have their own files.

init.el will:

1. Check that all required packages for boot-strap are installed (basically, use-package), installing them if not (usually).
2. Load all settings from their individual files.
3. That's pretty much it.

- globals.el :: use for anything that has global use.
- helpers.el :: helper functions for config.
- random-functions.el :: as it says, stuff I occasionally use :-)
- theme.el :: not just the visual theme, but settings like hiding tool bars etc.
- dev-settings.el :: anything that effects the top-level development config.

A constant work in progress :-)

[[file:emacs.png]]

* ToDo!
** Golang
- [ ] Ensure using latest version of golang.
- [ ] Copy old settings.
- [ ] Update to use use-package for the basics.
- [ ] Test.
- [ ] Add in the more complex stuff like popup menu etc.
- [ ] Test again.
** Scheme
- [ ] Reinstall Guile.
- [ ] Setup Geiser (again); geiser-version currently returns @PACKAGE-STRING@...
** Org
- [ ] Look into having a central agenda file.
- [ ] Learn how to use tags!  Seriously, it's been how long?
** Elisp / Emacs
- [ ] When running ansi-term, should source ~/.profile.
- [ ] Dig out old Emacs-notes org file, dust off and update with what I learnt on debugging elisp code.
** Ruby
- [ ] Get rid of all bloody versions other than default OSX one.
- [ ] If that's not recent enough, install the latest /only/ - fecking RVM is an absolute pain, I don't actually need it for what I want to do.
- [ ] Setup enough for a nice REPL experience (don't worry about Rails, never going to use it).
